input {
  file {
        path => ["/var/log/_remote/*.log"]
        start_position => "beginning"
        sincedb_path => "/dev/null"
        mode => "tail"
        stat_interval => "1"
        discover_interval => 5
        tags => ["active"]
	type => "active"
  }

  file {
	path => ["/var/log/_remote_unarchived/*.log"]
	start_position => "beginning"
	sincedb_path => "/dev/null"
	mode => "read"
	tags => ["archived"]
	type => "archived"
	file_completed_action => "delete"
	file_completed_log_path => "/mnt/dopDisk1TB/lost+found/logstash-logs/archived_completed.log"
	file_sort_by => "path"
	file_sort_direction => "asc"
  }
}

filter {
  if [type] == "archived" {
    # Для файла archive.log используем текущую дату
    mutate {
      add_field => {
        "log_date" => "%{+YYYY-MM-dd}"
      }
      add_field => { "debug_path" => "%{path}" }
      add_field => { "debug_message" => "%{message}" }
    }

    date {
      match => ["log_date", "YYYY-MM-dd"]
      target => "@timestamp"
      timezone => "UTC"
    }
  }

  # Остальные фильтры без изменений
  mutate {
    add_field => { "log_type" => "%{type}" }
    remove_field => ["@version", "host"]
  }

  grok {
    match => { "message" => "%{IP:ipAddressOfDevice}" }
  }
}

output {
  if [type] == "active" {
	elasticsearch {
		hosts => "https://localhost:9200"
		index => "remote_logs_active-%{+YYYY.MM.dd}"
		user => "elastic"
		password => "your_password"
		ssl_certificate_authorities => "/etc/logstash/certs/http_ca.crt"
		document_id => "%{@timestamp}-%{host}-%{offset}"
	}
  } else {
    elasticsearch {
        hosts => "https://localhost:9200"
        index => "remote_logs_archived-%{+YYYY.MM.dd}"
        user => "elastic"
        password => "your_password"
        ssl_certificate_authorities => "/etc/logstash/certs/http_ca.crt"
	document_id => "%{@timestamp}-%{host}-%{path}-%{offset}"
    }
  }
  stdout {
        codec => rubydebug
  }
}
